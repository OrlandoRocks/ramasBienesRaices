{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { BaseSwitch } from \"src/components\";\nexport default {\n  name: \"sidebar-share\",\n  components: {\n    BaseSwitch: BaseSwitch\n  },\n  props: {\n    backgroundColor: String\n  },\n  data: function data() {\n    return {\n      sidebarMini: true,\n      darkMode: true,\n      isOpen: false,\n      sidebarColors: [{\n        color: \"primary\",\n        active: false,\n        value: \"primary\"\n      }, {\n        color: \"vue\",\n        active: true,\n        value: \"vue\"\n      }, {\n        color: \"info\",\n        active: false,\n        value: \"blue\"\n      }, {\n        color: \"success\",\n        active: false,\n        value: \"green\"\n      }, {\n        color: \"warning\",\n        active: false,\n        value: \"orange\"\n      }, {\n        color: \"danger\",\n        active: false,\n        value: \"red\"\n      }]\n    };\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n    },\n    toggleList: function toggleList(list, itemToActivate) {\n      list.forEach(function (listItem) {\n        listItem.active = false;\n      });\n      itemToActivate.active = true;\n    },\n    changeSidebarBackground: function changeSidebarBackground(item) {\n      this.$emit(\"update:backgroundColor\", item.value);\n      this.toggleList(this.sidebarColors, item);\n    },\n    toggleMode: function toggleMode(type) {\n      var docClasses = document.body.classList;\n      if (type) {\n        docClasses.remove(\"white-content\");\n      } else {\n        docClasses.add(\"white-content\");\n      }\n    },\n    minimizeSidebar: function minimizeSidebar() {\n      this.$sidebar.toggleMinimize();\n    }\n  }\n};","map":{"version":3,"names":["BaseSwitch","name","components","props","backgroundColor","String","data","sidebarMini","darkMode","isOpen","sidebarColors","color","active","value","methods","toggleDropDown","closeDropDown","toggleList","list","itemToActivate","forEach","listItem","changeSidebarBackground","item","$emit","toggleMode","type","docClasses","document","body","classList","remove","add","minimizeSidebar","$sidebar","toggleMinimize"],"sources":["src/pages/Layout/SidebarSharePlugin.vue"],"sourcesContent":["<template>\n  <div class=\"fixed-plugin\" v-click-outside=\"closeDropDown\">\n    <div class=\"dropdown show-dropdown\" :class=\"{ show: isOpen }\">\n      <a data-toggle=\"dropdown\" class=\"settings-icon\">\n        <i class=\"fa fa-cog fa-2x\" @click=\"toggleDropDown\"> </i>\n      </a>\n      <ul class=\"dropdown-menu\" :class=\"{ show: isOpen }\">\n        <li class=\"header-title\">Color del Menu</li>\n        <li class=\"adjustments-line\">\n          <a class=\"switch-trigger background-color\">\n            <div class=\"badge-colors text-center\">\n              <span\n                v-for=\"item in sidebarColors\"\n                :key=\"item.color\"\n                class=\"badge filter\"\n                :class=\"[`badge-${item.color}`, { active: item.active }]\"\n                :data-color=\"item.color\"\n                @click=\"changeSidebarBackground(item)\"\n              ></span>\n            </div>\n            <div class=\"clearfix\"></div>\n          </a>\n        </li>\n\n        <li class=\"header-title\">Menu Mini</li>\n        <li class=\"adjustments-line\">\n          <div class=\"togglebutton switch-sidebar-mini\">\n            <span class=\"label-switch\">Si</span>\n            <base-switch\n              v-model=\"sidebarMini\"\n              @input=\"minimizeSidebar\"\n            ></base-switch>\n            <span class=\"label-switch label-right\">No</span>\n          </div>\n\n          <div class=\"togglebutton switch-change-color mt-3\">\n            <span class=\"label-switch\">Modo Claro</span>\n            <base-switch v-model=\"darkMode\" @input=\"toggleMode\"></base-switch>\n            <span class=\"label-switch label-right\">Modo Oscuro</span>\n          </div>\n        </li>\n\n        <li class=\"button-container mt-4\">\n          <a\n            href=\"https://demos.creative-tim.com/vue-black-dashboard-pro/documentation\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"btn btn-default btn-block btn-round\"\n          >\n            Documentation\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nimport { BaseSwitch } from \"src/components\";\n\nexport default {\n  name: \"sidebar-share\",\n  components: {\n    BaseSwitch,\n  },\n  props: {\n    backgroundColor: String,\n  },\n  data() {\n    return {\n      sidebarMini: true,\n      darkMode: true,\n      isOpen: false,\n      sidebarColors: [\n        { color: \"primary\", active: false, value: \"primary\" },\n        { color: \"vue\", active: true, value: \"vue\" },\n        { color: \"info\", active: false, value: \"blue\" },\n        { color: \"success\", active: false, value: \"green\" },\n        { color: \"warning\", active: false, value: \"orange\" },\n        { color: \"danger\", active: false, value: \"red\" },\n      ],\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n    },\n    closeDropDown() {\n      this.isOpen = false;\n    },\n    toggleList(list, itemToActivate) {\n      list.forEach((listItem) => {\n        listItem.active = false;\n      });\n      itemToActivate.active = true;\n    },\n    changeSidebarBackground(item) {\n      this.$emit(\"update:backgroundColor\", item.value);\n      this.toggleList(this.sidebarColors, item);\n    },\n    toggleMode(type) {\n      let docClasses = document.body.classList;\n      if (type) {\n        docClasses.remove(\"white-content\");\n      } else {\n        docClasses.add(\"white-content\");\n      }\n    },\n    minimizeSidebar() {\n      this.$sidebar.toggleMinimize();\n    },\n  },\n};\n</script>\n<style scoped lang=\"scss\">\n@import \"~@/assets/sass/dashboard/custom/variables\";\n\n.settings-icon {\n  cursor: pointer;\n}\n\n.badge-vue {\n  background-color: $vue;\n}\n</style>\n"],"mappings":";;AAyDA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF,UAAA,EAAAA;EACA;EACAG,KAAA;IACAC,eAAA,EAAAC;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;MACAC,MAAA;MACAC,aAAA,GACA;QAAAC,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA,GACA;QAAAF,KAAA;QAAAC,MAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MACA,KAAAN,MAAA,SAAAA,MAAA;IACA;IACAO,aAAA,WAAAA,cAAA;MACA,KAAAP,MAAA;IACA;IACAQ,UAAA,WAAAA,WAAAC,IAAA,EAAAC,cAAA;MACAD,IAAA,CAAAE,OAAA,WAAAC,QAAA;QACAA,QAAA,CAAAT,MAAA;MACA;MACAO,cAAA,CAAAP,MAAA;IACA;IACAU,uBAAA,WAAAA,wBAAAC,IAAA;MACA,KAAAC,KAAA,2BAAAD,IAAA,CAAAV,KAAA;MACA,KAAAI,UAAA,MAAAP,aAAA,EAAAa,IAAA;IACA;IACAE,UAAA,WAAAA,WAAAC,IAAA;MACA,IAAAC,UAAA,GAAAC,QAAA,CAAAC,IAAA,CAAAC,SAAA;MACA,IAAAJ,IAAA;QACAC,UAAA,CAAAI,MAAA;MACA;QACAJ,UAAA,CAAAK,GAAA;MACA;IACA;IACAC,eAAA,WAAAA,gBAAA;MACA,KAAAC,QAAA,CAAAC,cAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}