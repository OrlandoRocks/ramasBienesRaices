{"ast":null,"code":"import axios from \"axios\";\nvar BASE_URL = process.env.VUE_APP_BACKEND_URL;\nexport default {\n  namespaced: true,\n  state: {\n    presignedUrl: null,\n    uploadPath: null\n  },\n  mutations: {\n    setPresignedUrl: function setPresignedUrl(state, _ref) {\n      var url = _ref.url,\n        path = _ref.path;\n      state.presignedUrl = url;\n      state.uploadPath = path;\n    }\n  },\n  actions: {\n    getPresignedUrl: function getPresignedUrl(_ref2, fileName) {\n      var commit = _ref2.commit;\n      var config = {\n        headers: {\n          Authorization: localStorage.getItem(\"auth_token\")\n        }\n      };\n      return axios.post(\"\".concat(BASE_URL, \"/presigned_url\"), {\n        file_name: fileName\n      }, config).then(function (response) {\n        commit(\"setPresignedUrl\", {\n          url: response.data.url,\n          path: response.data.path\n        });\n        return response.data;\n      });\n    },\n    uploadFileToS3: function uploadFileToS3(_, _ref3) {\n      var url = _ref3.url,\n        file = _ref3.file;\n      console.log(\"uploadFileToS3: \", file);\n      var options = {\n        headers: {\n          \"Content-Type\": file.type\n        }\n      };\n      return axios.put(url, file, options);\n    }\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","process","env","VUE_APP_BACKEND_URL","namespaced","state","presignedUrl","uploadPath","mutations","setPresignedUrl","_ref","url","path","actions","getPresignedUrl","_ref2","fileName","commit","config","headers","Authorization","localStorage","getItem","post","concat","file_name","then","response","data","uploadFileToS3","_","_ref3","file","console","log","options","type","put"],"sources":["/Users/it/webstorm_projects/VueProjects/ramasBienesRaices/src/store/modules/s3.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.VUE_APP_BACKEND_URL;\n\nexport default {\n  namespaced: true,\n  state: {\n    presignedUrl: null,\n    uploadPath: null,\n  },\n  mutations: {\n    setPresignedUrl(state, { url, path }) {\n      state.presignedUrl = url;\n      state.uploadPath = path;\n    },\n  },\n  actions: {\n    getPresignedUrl({ commit }, fileName) {\n      const config = {\n        headers: {\n          Authorization: localStorage.getItem(\"auth_token\"),\n        },\n      };\n      return axios\n        .post(\n          `${BASE_URL}/presigned_url`,\n          {\n            file_name: fileName,\n          },\n          config\n        )\n        .then((response) => {\n          commit(\"setPresignedUrl\", {\n            url: response.data.url,\n            path: response.data.path\n          });\n          return response.data;\n        });\n    },\n    uploadFileToS3(_, { url, file }) {\n      console.log(\"uploadFileToS3: \", file);\n      const options = {\n        headers: { \"Content-Type\": file.type },\n      };\n      return axios.put(url, file, options);\n    },\n  },\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAEhD,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACTC,eAAe,WAAAA,gBAACJ,KAAK,EAAAK,IAAA,EAAiB;MAAA,IAAbC,GAAG,GAAAD,IAAA,CAAHC,GAAG;QAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAChCP,KAAK,CAACC,YAAY,GAAGK,GAAG;MACxBN,KAAK,CAACE,UAAU,GAAGK,IAAI;IACzB;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAe,WAAAA,gBAAAC,KAAA,EAAaC,QAAQ,EAAE;MAAA,IAApBC,MAAM,GAAAF,KAAA,CAANE,MAAM;MACtB,IAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAEC,YAAY,CAACC,OAAO,CAAC,YAAY;QAClD;MACF,CAAC;MACD,OAAOvB,KAAK,CACTwB,IAAI,IAAAC,MAAA,CACAxB,QAAQ,qBACX;QACEyB,SAAS,EAAET;MACb,CAAC,EACDE,MACF,CAAC,CACAQ,IAAI,CAAC,UAACC,QAAQ,EAAK;QAClBV,MAAM,CAAC,iBAAiB,EAAE;UACxBN,GAAG,EAAEgB,QAAQ,CAACC,IAAI,CAACjB,GAAG;UACtBC,IAAI,EAAEe,QAAQ,CAACC,IAAI,CAAChB;QACtB,CAAC,CAAC;QACF,OAAOe,QAAQ,CAACC,IAAI;MACtB,CAAC,CAAC;IACN,CAAC;IACDC,cAAc,WAAAA,eAACC,CAAC,EAAAC,KAAA,EAAiB;MAAA,IAAbpB,GAAG,GAAAoB,KAAA,CAAHpB,GAAG;QAAEqB,IAAI,GAAAD,KAAA,CAAJC,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;MACrC,IAAMG,OAAO,GAAG;QACdhB,OAAO,EAAE;UAAE,cAAc,EAAEa,IAAI,CAACI;QAAK;MACvC,CAAC;MACD,OAAOrC,KAAK,CAACsC,GAAG,CAAC1B,GAAG,EAAEqB,IAAI,EAAEG,OAAO,CAAC;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}