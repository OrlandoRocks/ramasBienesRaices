{"ast":null,"code":"import \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Notifications from \"./Notifications.vue\";\nvar NotificationStore = {\n  state: [],\n  // here the notifications will be added\n  settings: {\n    overlap: false,\n    verticalAlign: \"top\",\n    horizontalAlign: \"right\",\n    type: \"info\",\n    timeout: 5000,\n    closeOnClick: true,\n    showClose: true,\n    order: \"reverse\" // normal | reverse (When reverse, each notification will be added on top)\n  },\n  setOptions: function setOptions(options) {\n    this.settings = Object.assign(this.settings, options);\n  },\n  removeNotification: function removeNotification(timestamp) {\n    var indexToDelete = this.state.findIndex(function (n) {\n      return n.timestamp === timestamp;\n    });\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n  addNotification: function addNotification(notification) {\n    if (typeof notification === \"string\" || notification instanceof String) {\n      notification = {\n        message: notification\n      };\n    }\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length);\n    notification = Object.assign({}, this.settings, notification);\n    if (this.settings.order === \"reverse\") {\n      this.state.unshift(notification);\n    } else {\n      this.state.push(notification);\n    }\n  },\n  notify: function notify(notification) {\n    var _this = this;\n    if (Array.isArray(notification)) {\n      notification.forEach(function (notificationInstance) {\n        _this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  }\n};\nvar NotificationsPlugin = {\n  install: function install(Vue, options) {\n    var app = new Vue({\n      data: {\n        notificationStore: NotificationStore\n      },\n      methods: {\n        notify: function notify(notification) {\n          this.notificationStore.notify(notification);\n        }\n      }\n    });\n    Vue.prototype.$notify = app.notify;\n    Vue.prototype.$notifications = app.notificationStore;\n    Vue.component(\"Notifications\", Notifications);\n    if (options) {\n      NotificationStore.setOptions(options);\n    }\n  }\n};\nexport default NotificationsPlugin;","map":{"version":3,"names":["Notifications","NotificationStore","state","settings","overlap","verticalAlign","horizontalAlign","type","timeout","closeOnClick","showClose","order","setOptions","options","Object","assign","removeNotification","timestamp","indexToDelete","findIndex","n","splice","addNotification","notification","String","message","Date","setMilliseconds","getMilliseconds","length","unshift","push","notify","_this","Array","isArray","forEach","notificationInstance","NotificationsPlugin","install","Vue","app","data","notificationStore","methods","prototype","$notify","$notifications","component"],"sources":["/Users/it/webstorm_projects/VueProjects/ramas_bienes_raices/src/components/NotificationPlugin/index.js"],"sourcesContent":["import Notifications from \"./Notifications.vue\";\n\nconst NotificationStore = {\n  state: [], // here the notifications will be added\n  settings: {\n    overlap: false,\n    verticalAlign: \"top\",\n    horizontalAlign: \"right\",\n    type: \"info\",\n    timeout: 5000,\n    closeOnClick: true,\n    showClose: true,\n    order: \"reverse\", // normal | reverse (When reverse, each notification will be added on top)\n  },\n  setOptions(options) {\n    this.settings = Object.assign(this.settings, options);\n  },\n  removeNotification(timestamp) {\n    const indexToDelete = this.state.findIndex(\n      (n) => n.timestamp === timestamp\n    );\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n  addNotification(notification) {\n    if (typeof notification === \"string\" || notification instanceof String) {\n      notification = { message: notification };\n    }\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(\n      notification.timestamp.getMilliseconds() + this.state.length\n    );\n    notification = Object.assign({}, this.settings, notification);\n    if (this.settings.order === \"reverse\") {\n      this.state.unshift(notification);\n    } else {\n      this.state.push(notification);\n    }\n  },\n  notify(notification) {\n    if (Array.isArray(notification)) {\n      notification.forEach((notificationInstance) => {\n        this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  },\n};\n\nconst NotificationsPlugin = {\n  install(Vue, options) {\n    let app = new Vue({\n      data: {\n        notificationStore: NotificationStore,\n      },\n      methods: {\n        notify(notification) {\n          this.notificationStore.notify(notification);\n        },\n      },\n    });\n    Vue.prototype.$notify = app.notify;\n    Vue.prototype.$notifications = app.notificationStore;\n    Vue.component(\"Notifications\", Notifications);\n    if (options) {\n      NotificationStore.setOptions(options);\n    }\n  },\n};\n\nexport default NotificationsPlugin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}