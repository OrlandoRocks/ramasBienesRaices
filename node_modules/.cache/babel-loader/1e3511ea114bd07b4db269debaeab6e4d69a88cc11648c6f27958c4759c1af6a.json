{"ast":null,"code":"export default {\n  name: \"sidebar\",\n  props: {\n    title: {\n      type: String,\n      default: \"MasterMind\",\n      description: \"Sidebar title\"\n    },\n    shortTitle: {\n      type: String,\n      default: \"MM\",\n      description: \"Sidebar short title\"\n    },\n    logo: {\n      type: String,\n      default: \"/assets/logo.png\",\n      description: \"Sidebar app logo\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"vue\",\n      validator: function validator(value) {\n        var acceptedValues = [\"\", \"vue\", \"blue\", \"green\", \"orange\", \"red\", \"primary\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: \"Sidebar background color (vue|blue|green|orange|red|primary)\"\n    },\n    sidebarLinks: {\n      type: Array,\n      default: function _default() {\n        return [];\n      },\n      description: \"List of sidebar links as an array if you don't want to use components for these.\"\n    },\n    autoClose: {\n      type: Boolean,\n      default: true,\n      description: \"Whether sidebar should autoclose on mobile when clicking an item\"\n    }\n  },\n  provide: function provide() {\n    return {\n      autoClose: this.autoClose\n    };\n  },\n  methods: {\n    minimizeSidebar: function minimizeSidebar() {\n      if (this.$sidebar) {\n        this.$sidebar.toggleMinimize();\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  }\n};","map":{"version":3,"names":["name","props","title","type","String","default","description","shortTitle","logo","backgroundColor","validator","value","acceptedValues","indexOf","sidebarLinks","Array","_default","autoClose","Boolean","provide","methods","minimizeSidebar","$sidebar","toggleMinimize","beforeDestroy","showSidebar"],"sources":["src/components/SidebarPlugin/SideBar.vue"],"sourcesContent":["<template>\n  <div class=\"sidebar\" :data=\"backgroundColor\">\n    <div class=\"sidebar-wrapper\" ref=\"sidebarScrollArea\">\n      <div class=\"logo\">\n        <a href=\"http://www.google.com\" class=\"simple-text logo-mini\">\n          <img :src=\"logo\" alt=\"app-logo\" />\n        </a>\n        <a href=\"http://www.google.com\" class=\"simple-text logo-normal\">\n          {{ title }}\n        </a>\n      </div>\n      <slot></slot>\n      <ul class=\"nav\">\n        <slot name=\"links\">\n          <sidebar-item\n            v-for=\"(link, index) in sidebarLinks\"\n            :key=\"link.name + index\"\n            :link=\"link\"\n          >\n            <sidebar-item\n              v-for=\"(subLink, index) in link.children\"\n              :key=\"subLink.name + index\"\n              :link=\"subLink\"\n            >\n            </sidebar-item>\n          </sidebar-item>\n        </slot>\n      </ul>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"sidebar\",\n  props: {\n    title: {\n      type: String,\n      default: \"MasterMind\",\n      description: \"Sidebar title\",\n    },\n    shortTitle: {\n      type: String,\n      default: \"MM\",\n      description: \"Sidebar short title\",\n    },\n    logo: {\n      type: String,\n      default: \"/assets/logo.png\",\n      description: \"Sidebar app logo\",\n    },\n    backgroundColor: {\n      type: String,\n      default: \"vue\",\n      validator: (value) => {\n        let acceptedValues = [\n          \"\",\n          \"vue\",\n          \"blue\",\n          \"green\",\n          \"orange\",\n          \"red\",\n          \"primary\",\n        ];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description:\n        \"Sidebar background color (vue|blue|green|orange|red|primary)\",\n    },\n    sidebarLinks: {\n      type: Array,\n      default: () => [],\n      description:\n        \"List of sidebar links as an array if you don't want to use components for these.\",\n    },\n    autoClose: {\n      type: Boolean,\n      default: true,\n      description:\n        \"Whether sidebar should autoclose on mobile when clicking an item\",\n    },\n  },\n  provide() {\n    return {\n      autoClose: this.autoClose,\n    };\n  },\n  methods: {\n    minimizeSidebar() {\n      if (this.$sidebar) {\n        this.$sidebar.toggleMinimize();\n      }\n    },\n  },\n  beforeDestroy() {\n    if (this.$sidebar.showSidebar) {\n      this.$sidebar.showSidebar = false;\n    }\n  },\n};\n</script>\n<style>\n@media (min-width: 992px) {\n  .navbar-search-form-mobile,\n  .nav-mobile-menu {\n    display: none;\n  }\n}\n</style>\n"],"mappings":"AAgCA;EACAA,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAC,UAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAE,IAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAG,eAAA;MACAN,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAK,SAAA,WAAAA,UAAAC,KAAA;QACA,IAAAC,cAAA,IACA,IACA,OACA,QACA,SACA,UACA,OACA,UACA;QACA,OAAAA,cAAA,CAAAC,OAAA,CAAAF,KAAA;MACA;MACAL,WAAA,EACA;IACA;IACAQ,YAAA;MACAX,IAAA,EAAAY,KAAA;MACAV,OAAA,WAAAW,SAAA;QAAA;MAAA;MACAV,WAAA,EACA;IACA;IACAW,SAAA;MACAd,IAAA,EAAAe,OAAA;MACAb,OAAA;MACAC,WAAA,EACA;IACA;EACA;EACAa,OAAA,WAAAA,QAAA;IACA;MACAF,SAAA,OAAAA;IACA;EACA;EACAG,OAAA;IACAC,eAAA,WAAAA,gBAAA;MACA,SAAAC,QAAA;QACA,KAAAA,QAAA,CAAAC,cAAA;MACA;IACA;EACA;EACAC,aAAA,WAAAA,cAAA;IACA,SAAAF,QAAA,CAAAG,WAAA;MACA,KAAAH,QAAA,CAAAG,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}