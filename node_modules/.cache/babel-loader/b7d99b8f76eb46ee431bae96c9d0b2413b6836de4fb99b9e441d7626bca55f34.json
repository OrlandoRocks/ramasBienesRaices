{"ast":null,"code":"import { BaseCheckbox } from \"src/components/index\";\nimport { extend } from \"vee-validate\";\nimport { required, email, confirmed } from \"vee-validate/dist/rules\";\nextend(\"email\", email);\nextend(\"required\", required);\nextend(\"confirmed\", confirmed);\nexport default {\n  components: {\n    BaseCheckbox: BaseCheckbox\n  },\n  data: function data() {\n    return {\n      email: \"\",\n      password: \"\",\n      confirmation: \"\",\n      subscribe: false\n    };\n  },\n  methods: {\n    submit: function submit() {\n      alert(\"Form has been submitted!\");\n    }\n  }\n};","map":{"version":3,"names":["BaseCheckbox","extend","required","email","confirmed","components","data","password","confirmation","subscribe","methods","submit","alert"],"sources":["src/pages/Forms/ValidationForms/RegisterForm.vue"],"sourcesContent":["<template>\n  <ValidationObserver v-slot=\"{ handleSubmit }\">\n    <form @submit.prevent=\"handleSubmit(submit)\">\n      <card footer-classes=\"text-right\">\n        <div slot=\"header\"><h4 class=\"card-title\">Register Form</h4></div>\n        <div>\n          <ValidationProvider\n            name=\"email\"\n            rules=\"required|email\"\n            v-slot=\"{ passed, failed, errors }\"\n          >\n            <base-input\n              required\n              v-model=\"email\"\n              type=\"email\"\n              label=\"Email address\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n            >\n            </base-input>\n          </ValidationProvider>\n\n          <ValidationProvider\n            name=\"password\"\n            rules=\"required|confirmed:confirmation\"\n            v-slot=\"{ passed, failed, errors }\"\n          >\n            <base-input\n              required\n              v-model=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n            >\n            </base-input>\n          </ValidationProvider>\n\n          <ValidationProvider\n            name=\"confirm\"\n            vid=\"confirmation\"\n            rules=\"required\"\n            v-slot=\"{ passed, failed, errors }\"\n          >\n            <base-input\n              required\n              v-model=\"confirmation\"\n              type=\"password\"\n              label=\"Confirm Password\"\n              :error=\"errors[0]\"\n              :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n            >\n            </base-input>\n          </ValidationProvider>\n\n          <div class=\"category form-category\">* Required fields</div>\n        </div>\n        <template slot=\"footer\" class=\"text-right\">\n          <base-checkbox v-model=\"subscribe\" class=\"pull-left\" name=\"subscribe\">\n            Accept terms & conditions\n          </base-checkbox>\n          <base-button native-type=\"submit\" type=\"primary\"\n            >Register</base-button\n          >\n        </template>\n      </card>\n    </form>\n  </ValidationObserver>\n</template>\n<script>\nimport { BaseCheckbox } from \"src/components/index\";\nimport { extend } from \"vee-validate\";\nimport { required, email, confirmed } from \"vee-validate/dist/rules\";\n\nextend(\"email\", email);\nextend(\"required\", required);\nextend(\"confirmed\", confirmed);\n\nexport default {\n  components: {\n    BaseCheckbox,\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      confirmation: \"\",\n      subscribe: false,\n    };\n  },\n  methods: {\n    submit() {\n      alert(\"Form has been submitted!\");\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":"AAsEA,SAAAA,YAAA;AACA,SAAAC,MAAA;AACA,SAAAC,QAAA,EAAAC,KAAA,EAAAC,SAAA;AAEAH,MAAA,UAAAE,KAAA;AACAF,MAAA,aAAAC,QAAA;AACAD,MAAA,cAAAG,SAAA;AAEA;EACAC,UAAA;IACAL,YAAA,EAAAA;EACA;EACAM,IAAA,WAAAA,KAAA;IACA;MACAH,KAAA;MACAI,QAAA;MACAC,YAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA,WAAAA,OAAA;MACAC,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}