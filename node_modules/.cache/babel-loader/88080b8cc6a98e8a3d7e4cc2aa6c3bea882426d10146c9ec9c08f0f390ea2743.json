{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { SlideYUpTransition } from \"vue2-transitions\";\nexport default {\n  name: \"modal\",\n  components: {\n    SlideYUpTransition: SlideYUpTransition\n  },\n  props: {\n    show: Boolean,\n    showClose: {\n      type: Boolean,\n      default: true\n    },\n    centered: {\n      type: Boolean,\n      default: false\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: \"Whether modal should be appended to document body\"\n    },\n    scrollToBottom: {\n      type: Boolean,\n      default: true,\n      description: \"Whether modal should scroll to it's bottom automatically\"\n    },\n    type: {\n      type: String,\n      default: \"\",\n      validator: function validator(value) {\n        var acceptedValues = [\"\", \"notice\", \"mini\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Modal type (notice|mini|\"\") '\n    },\n    modalClasses: {\n      type: [Object, String],\n      description: \"Modal dialog css classes\"\n    },\n    modalContentClasses: {\n      type: [Object, String],\n      description: \"Modal dialog content css classes\"\n    },\n    gradient: {\n      type: String,\n      description: \"Modal gradient type (danger, primary etc)\"\n    },\n    headerClasses: {\n      type: [Object, String],\n      description: \"Modal Header css classes\"\n    },\n    bodyClasses: {\n      type: [Object, String],\n      description: \"Modal Body css classes\"\n    },\n    footerClasses: {\n      type: [Object, String],\n      description: \"Modal Footer css classes\"\n    },\n    animationDuration: {\n      type: Number,\n      default: 500,\n      description: \"Modal transition duration\"\n    }\n  },\n  methods: {\n    closeModal: function closeModal() {\n      this.$emit(\"update:show\", false);\n      this.$emit(\"close\");\n    },\n    scrollModalToBottom: function scrollModalToBottom() {\n      if (!this.scrollToBottom) return;\n      var elm = this.$refs.modal;\n      elm.scrollTop = elm.scrollHeight - elm.clientHeight;\n    }\n  },\n  mounted: function mounted() {\n    if (this.appendToBody) {\n      document.body.appendChild(this.$el);\n    }\n  },\n  destroyed: function destroyed() {\n    if (this.appendToBody && this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n  },\n  watch: {\n    show: function show(val) {\n      var documentClasses = document.body.classList;\n      if (val) {\n        documentClasses.add(\"modal-open\");\n        this.$nextTick(this.scrollModalToBottom);\n      } else {\n        documentClasses.remove(\"modal-open\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["SlideYUpTransition","name","components","props","show","Boolean","showClose","type","default","centered","appendToBody","description","scrollToBottom","String","validator","value","acceptedValues","indexOf","modalClasses","Object","modalContentClasses","gradient","headerClasses","bodyClasses","footerClasses","animationDuration","Number","methods","closeModal","$emit","scrollModalToBottom","elm","$refs","modal","scrollTop","scrollHeight","clientHeight","mounted","document","body","appendChild","$el","destroyed","parentNode","removeChild","watch","val","documentClasses","classList","add","$nextTick","remove"],"sources":["src/components/Modal.vue"],"sourcesContent":["<template>\n  <SlideYUpTransition :duration=\"animationDuration\">\n    <div\n      ref=\"modal\"\n      class=\"modal fade\"\n      @click.self=\"closeModal\"\n      :class=\"[\n        { 'show d-block': show },\n        { 'd-none': !show },\n        { 'modal-mini': type === 'mini' },\n      ]\"\n      v-show=\"show\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      :aria-hidden=\"!show\"\n    >\n      <div\n        class=\"modal-dialog\"\n        role=\"document\"\n        :class=\"[\n          { 'modal-notice': type === 'notice' },\n          { 'modal-dialog-centered': centered },\n          modalClasses,\n        ]\"\n      >\n        <div\n          class=\"modal-content\"\n          :class=\"[\n            gradient ? `bg-gradient-${gradient}` : '',\n            modalContentClasses,\n          ]\"\n        >\n          <div\n            class=\"modal-header\"\n            :class=\"[headerClasses]\"\n            v-if=\"$slots.header\"\n          >\n            <slot name=\"header\"></slot>\n            <slot name=\"close-button\">\n              <button\n                type=\"button\"\n                class=\"close\"\n                v-if=\"showClose\"\n                @click=\"closeModal\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <i class=\"tim-icons icon-simple-remove\"></i>\n              </button>\n            </slot>\n          </div>\n\n          <div v-if=\"$slots.default\" class=\"modal-body\" :class=\"bodyClasses\">\n            <slot></slot>\n          </div>\n\n          <div class=\"modal-footer\" :class=\"footerClasses\" v-if=\"$slots.footer\">\n            <slot name=\"footer\"></slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </SlideYUpTransition>\n</template>\n<script>\nimport { SlideYUpTransition } from \"vue2-transitions\";\n\nexport default {\n  name: \"modal\",\n  components: {\n    SlideYUpTransition,\n  },\n  props: {\n    show: Boolean,\n    showClose: {\n      type: Boolean,\n      default: true,\n    },\n    centered: {\n      type: Boolean,\n      default: false,\n    },\n    appendToBody: {\n      type: Boolean,\n      default: true,\n      description: \"Whether modal should be appended to document body\",\n    },\n    scrollToBottom: {\n      type: Boolean,\n      default: true,\n      description: \"Whether modal should scroll to it's bottom automatically\",\n    },\n    type: {\n      type: String,\n      default: \"\",\n      validator(value) {\n        let acceptedValues = [\"\", \"notice\", \"mini\"];\n        return acceptedValues.indexOf(value) !== -1;\n      },\n      description: 'Modal type (notice|mini|\"\") ',\n    },\n    modalClasses: {\n      type: [Object, String],\n      description: \"Modal dialog css classes\",\n    },\n    modalContentClasses: {\n      type: [Object, String],\n      description: \"Modal dialog content css classes\",\n    },\n    gradient: {\n      type: String,\n      description: \"Modal gradient type (danger, primary etc)\",\n    },\n    headerClasses: {\n      type: [Object, String],\n      description: \"Modal Header css classes\",\n    },\n    bodyClasses: {\n      type: [Object, String],\n      description: \"Modal Body css classes\",\n    },\n    footerClasses: {\n      type: [Object, String],\n      description: \"Modal Footer css classes\",\n    },\n    animationDuration: {\n      type: Number,\n      default: 500,\n      description: \"Modal transition duration\",\n    },\n  },\n  methods: {\n    closeModal() {\n      this.$emit(\"update:show\", false);\n      this.$emit(\"close\");\n    },\n    scrollModalToBottom() {\n      if (!this.scrollToBottom) return;\n      let elm = this.$refs.modal;\n      elm.scrollTop = elm.scrollHeight - elm.clientHeight;\n    },\n  },\n  mounted() {\n    if (this.appendToBody) {\n      document.body.appendChild(this.$el);\n    }\n  },\n  destroyed() {\n    if (this.appendToBody && this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n  },\n  watch: {\n    show(val) {\n      let documentClasses = document.body.classList;\n      if (val) {\n        documentClasses.add(\"modal-open\");\n        this.$nextTick(this.scrollModalToBottom);\n      } else {\n        documentClasses.remove(\"modal-open\");\n      }\n    },\n  },\n};\n</script>\n<style>\n.modal.show {\n  background-color: rgba(0, 0, 0, 0.3);\n}\n</style>\n"],"mappings":";AAiEA,SAAAA,kBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF,kBAAA,EAAAA;EACA;EACAG,KAAA;IACAC,IAAA,EAAAC,OAAA;IACAC,SAAA;MACAC,IAAA,EAAAF,OAAA;MACAG,OAAA;IACA;IACAC,QAAA;MACAF,IAAA,EAAAF,OAAA;MACAG,OAAA;IACA;IACAE,YAAA;MACAH,IAAA,EAAAF,OAAA;MACAG,OAAA;MACAG,WAAA;IACA;IACAC,cAAA;MACAL,IAAA,EAAAF,OAAA;MACAG,OAAA;MACAG,WAAA;IACA;IACAJ,IAAA;MACAA,IAAA,EAAAM,MAAA;MACAL,OAAA;MACAM,SAAA,WAAAA,UAAAC,KAAA;QACA,IAAAC,cAAA;QACA,OAAAA,cAAA,CAAAC,OAAA,CAAAF,KAAA;MACA;MACAJ,WAAA;IACA;IACAO,YAAA;MACAX,IAAA,GAAAY,MAAA,EAAAN,MAAA;MACAF,WAAA;IACA;IACAS,mBAAA;MACAb,IAAA,GAAAY,MAAA,EAAAN,MAAA;MACAF,WAAA;IACA;IACAU,QAAA;MACAd,IAAA,EAAAM,MAAA;MACAF,WAAA;IACA;IACAW,aAAA;MACAf,IAAA,GAAAY,MAAA,EAAAN,MAAA;MACAF,WAAA;IACA;IACAY,WAAA;MACAhB,IAAA,GAAAY,MAAA,EAAAN,MAAA;MACAF,WAAA;IACA;IACAa,aAAA;MACAjB,IAAA,GAAAY,MAAA,EAAAN,MAAA;MACAF,WAAA;IACA;IACAc,iBAAA;MACAlB,IAAA,EAAAmB,MAAA;MACAlB,OAAA;MACAG,WAAA;IACA;EACA;EACAgB,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAC,KAAA;MACA,KAAAA,KAAA;IACA;IACAC,mBAAA,WAAAA,oBAAA;MACA,UAAAlB,cAAA;MACA,IAAAmB,GAAA,QAAAC,KAAA,CAAAC,KAAA;MACAF,GAAA,CAAAG,SAAA,GAAAH,GAAA,CAAAI,YAAA,GAAAJ,GAAA,CAAAK,YAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,SAAA3B,YAAA;MACA4B,QAAA,CAAAC,IAAA,CAAAC,WAAA,MAAAC,GAAA;IACA;EACA;EACAC,SAAA,WAAAA,UAAA;IACA,SAAAhC,YAAA,SAAA+B,GAAA,SAAAA,GAAA,CAAAE,UAAA;MACA,KAAAF,GAAA,CAAAE,UAAA,CAAAC,WAAA,MAAAH,GAAA;IACA;EACA;EACAI,KAAA;IACAzC,IAAA,WAAAA,KAAA0C,GAAA;MACA,IAAAC,eAAA,GAAAT,QAAA,CAAAC,IAAA,CAAAS,SAAA;MACA,IAAAF,GAAA;QACAC,eAAA,CAAAE,GAAA;QACA,KAAAC,SAAA,MAAApB,mBAAA;MACA;QACAiB,eAAA,CAAAI,MAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}