{"ast":null,"code":"export default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    required: Boolean,\n    label: {\n      type: String,\n      description: \"Input label\"\n    },\n    error: {\n      type: String,\n      description: \"Input error\",\n      default: \"\"\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\"\n    },\n    addonRightIcon: {\n      type: String,\n      description: \"Input icon on the right\"\n    },\n    addonLeftIcon: {\n      type: String,\n      description: \"Input icon on the left\"\n    }\n  },\n  model: {\n    prop: \"value\",\n    event: \"input\"\n  },\n  data() {\n    return {\n      focused: false,\n      touched: false\n    };\n  },\n  computed: {\n    hasIcon() {\n      return this.hasLeftAddon || this.hasRightAddon;\n    },\n    hasLeftAddon() {\n      const {\n        addonLeft\n      } = this.$slots;\n      return addonLeft !== undefined || this.addonLeftIcon !== undefined;\n    },\n    hasRightAddon() {\n      const {\n        addonRight\n      } = this.$slots;\n      return addonRight !== undefined || this.addonRightIcon !== undefined;\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        blur: this.onBlur,\n        focus: this.onFocus\n      };\n    }\n  },\n  methods: {\n    onInput(evt) {\n      if (!this.touched) {\n        this.touched = true;\n      }\n      this.$emit(\"input\", evt.target.value);\n    },\n    onFocus(evt) {\n      this.focused = true;\n      this.$emit(\"focus\", evt);\n    },\n    onBlur(evt) {\n      this.focused = false;\n      this.$emit(\"blur\", evt);\n    }\n  }\n};","map":{"version":3,"names":["inheritAttrs","name","props","required","Boolean","label","type","String","description","error","default","value","Number","addonRightIcon","addonLeftIcon","model","prop","event","data","focused","touched","computed","hasIcon","hasLeftAddon","hasRightAddon","addonLeft","$slots","undefined","addonRight","listeners","$listeners","input","onInput","blur","onBlur","focus","onFocus","methods","evt","$emit","target"],"sources":["src/components/Inputs/BaseInput.vue"],"sourcesContent":["<template>\n  <div\n    class=\"form-group\"\n    :class=\"{\n      'input-group-focus': focused,\n      'has-label': label,\n      'has-icon': hasIcon,\n    }\"\n  >\n    <slot name=\"label\">\n      <label v-if=\"label\"> {{ label }} {{ required ? \"*\" : \"\" }} </label>\n    </slot>\n    <div class=\"mb-0\" :class=\"{ 'input-group': hasIcon }\">\n      <slot name=\"addonLeft\">\n        <span v-if=\"addonLeftIcon\" class=\"input-group-prepend\">\n          <div class=\"input-group-text\"><i :class=\"addonLeftIcon\"></i></div>\n        </span>\n      </slot>\n      <slot>\n        <input\n          :value=\"value\"\n          v-bind=\"$attrs\"\n          v-on=\"listeners\"\n          class=\"form-control\"\n          aria-describedby=\"addon-right addon-left\"\n        />\n      </slot>\n      <slot name=\"addonRight\">\n        <span v-if=\"addonRightIcon\" class=\"input-group-append\">\n          <div class=\"input-group-text\"><i :class=\"addonRightIcon\"></i></div>\n        </span>\n      </slot>\n    </div>\n\n    <slot name=\"error\" v-if=\"error || $slots.error\">\n      <label class=\"error\">{{ error }}</label>\n    </slot>\n    <slot name=\"helperText\"></slot>\n  </div>\n</template>\n<script>\nexport default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    required: Boolean,\n    label: {\n      type: String,\n      description: \"Input label\",\n    },\n    error: {\n      type: String,\n      description: \"Input error\",\n      default: \"\",\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\",\n    },\n    addonRightIcon: {\n      type: String,\n      description: \"Input icon on the right\",\n    },\n    addonLeftIcon: {\n      type: String,\n      description: \"Input icon on the left\",\n    },\n  },\n  model: {\n    prop: \"value\",\n    event: \"input\",\n  },\n  data() {\n    return {\n      focused: false,\n      touched: false,\n    };\n  },\n  computed: {\n    hasIcon() {\n      return this.hasLeftAddon || this.hasRightAddon;\n    },\n    hasLeftAddon() {\n      const { addonLeft } = this.$slots;\n      return addonLeft !== undefined || this.addonLeftIcon !== undefined;\n    },\n    hasRightAddon() {\n      const { addonRight } = this.$slots;\n      return addonRight !== undefined || this.addonRightIcon !== undefined;\n    },\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        blur: this.onBlur,\n        focus: this.onFocus,\n      };\n    },\n  },\n  methods: {\n    onInput(evt) {\n      if (!this.touched) {\n        this.touched = true;\n      }\n      this.$emit(\"input\", evt.target.value);\n    },\n    onFocus(evt) {\n      this.focused = true;\n      this.$emit(\"focus\", evt);\n    },\n    onBlur(evt) {\n      this.focused = false;\n      this.$emit(\"blur\", evt);\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":"AAyCA;EACAA,YAAA;EACAC,IAAA;EACAC,KAAA;IACAC,QAAA,EAAAC,OAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,WAAA;MACAE,OAAA;IACA;IACAC,KAAA;MACAL,IAAA,GAAAC,MAAA,EAAAK,MAAA;MACAJ,WAAA;IACA;IACAK,cAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;IACAM,aAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,WAAA;IACA;EACA;EACAO,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACAC,QAAA;MACA,YAAAC,YAAA,SAAAC,aAAA;IACA;IACAD,aAAA;MACA;QAAAE;MAAA,SAAAC,MAAA;MACA,OAAAD,SAAA,KAAAE,SAAA,SAAAb,aAAA,KAAAa,SAAA;IACA;IACAH,cAAA;MACA;QAAAI;MAAA,SAAAF,MAAA;MACA,OAAAE,UAAA,KAAAD,SAAA,SAAAd,cAAA,KAAAc,SAAA;IACA;IACAE,UAAA;MACA;QACA,QAAAC,UAAA;QACAC,KAAA,OAAAC,OAAA;QACAC,IAAA,OAAAC,MAAA;QACAC,KAAA,OAAAC;MACA;IACA;EACA;EACAC,OAAA;IACAL,QAAAM,GAAA;MACA,UAAAlB,OAAA;QACA,KAAAA,OAAA;MACA;MACA,KAAAmB,KAAA,UAAAD,GAAA,CAAAE,MAAA,CAAA7B,KAAA;IACA;IACAyB,QAAAE,GAAA;MACA,KAAAnB,OAAA;MACA,KAAAoB,KAAA,UAAAD,GAAA;IACA;IACAJ,OAAAI,GAAA;MACA,KAAAnB,OAAA;MACA,KAAAoB,KAAA,SAAAD,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}