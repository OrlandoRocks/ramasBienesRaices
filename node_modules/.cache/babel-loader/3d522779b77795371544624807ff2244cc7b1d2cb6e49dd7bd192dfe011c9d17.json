{"ast":null,"code":"import _TableColumn2 from \"element-ui/lib/theme-chalk/table-column.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _TableColumn from \"element-ui/lib/table-column\";\nimport _Table2 from \"element-ui/lib/theme-chalk/table.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Table from \"element-ui/lib/table\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport { BasePagination } from \"src/components\";\nimport Fuse from \"fuse.js\";\nimport swal from \"sweetalert2\";\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  components: {\n    BasePagination,\n    [_Select.name]: _Select,\n    [_Option.name]: _Option,\n    [_Table.name]: _Table,\n    [_TableColumn.name]: _TableColumn\n  },\n  computed: {\n    ...mapGetters([\"getResidentials\"]),\n    tableData() {\n      return this.getResidentials;\n    },\n    queriedData() {\n      let result = this.tableData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      return this.searchedData.length > 0 ? this.searchedData.length : this.tableData.length;\n    }\n  },\n  data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"name\", \"address\", \"user_name\"],\n      tableColumns: [{\n        prop: \"name\",\n        label: \"Nombre\",\n        minWidth: 200\n      }, {\n        prop: \"address\",\n        label: \"Direccion\",\n        minWidth: 250\n      }, {\n        prop: \"user_name\",\n        label: \"Responsable\",\n        minWidth: 120\n      }, {\n        prop: \"lands\",\n        label: \"Lotes\",\n        minWidth: 100\n      }, {\n        prop: \"cost\",\n        label: \"Costo/precio\",\n        minWidth: 120\n      }, {\n        prop: \"total_expenses\",\n        label: \"Gastos\",\n        minWidth: 120\n      }],\n      searchedData: [],\n      fuseSearch: null\n    };\n  },\n  methods: {\n    ...mapActions([\"fetchResidentials\"]),\n    handleLike(index, row) {\n      swal.fire({\n        title: `Has marcado como favorito el ${row.name}`,\n        buttonsStyling: false,\n        icon: \"success\",\n        customClass: {\n          confirmButton: \"btn btn-success btn-fill\"\n        }\n      });\n    },\n    handleEdit(index, row) {\n      this.$router.push({\n        name: \"EditResidential\",\n        params: {\n          id: row.id\n        }\n      });\n    },\n    handleDelete(index, row) {\n      swal.fire({\n        title: \"Estas seguro?\",\n        text: `No podras revertir estos cambios!`,\n        icon: \"warning\",\n        showCancelButton: true,\n        customClass: {\n          confirmButton: \"btn btn-success btn-fill\",\n          cancelButton: \"btn btn-danger btn-fill\"\n        },\n        confirmButtonText: \"Si, Borralo!\",\n        buttonsStyling: false\n      }).then(result => {\n        if (result.value) {\n          this.deleteRow(row);\n          swal.fire({\n            title: \"Eliminado!\",\n            text: `You deleted ${row.name}`,\n            icon: \"success\",\n            confirmButtonClass: \"btn btn-success btn-fill\",\n            buttonsStyling: false\n          });\n        }\n      });\n    },\n    deleteRow(row) {\n      let indexToDelete = this.tableData.findIndex(tableRow => tableRow.id === row.id);\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n    goToCreateResidential() {\n      this.$router.push({\n        name: \"CreateResidential\"\n      });\n    }\n  },\n  mounted() {\n    this.fuseSearch = new Fuse(this.getResidentials, {\n      keys: [\"name\", \"address\", \"user_name\"],\n      threshold: 0.3\n    });\n  },\n  created() {\n    this.$store.dispatch(\"fetchResidentials\");\n  },\n  watch: {\n    searchQuery(value) {\n      let result = this.tableData;\n      if (value !== \"\") {\n        const searchResult = this.fuseSearch.search(this.searchQuery);\n        result = searchResult.map(item => item.item);\n      }\n      this.searchedData = result;\n    }\n  }\n};","map":{"version":3,"names":["BasePagination","Fuse","swal","mapGetters","mapActions","components","_Select","name","_Option","_Table","_TableColumn","computed","tableData","getResidentials","queriedData","result","searchedData","length","slice","from","to","highBound","pagination","perPage","total","currentPage","data","perPageOptions","searchQuery","propsToSearch","tableColumns","prop","label","minWidth","fuseSearch","methods","handleLike","index","row","fire","title","buttonsStyling","icon","customClass","confirmButton","handleEdit","$router","push","params","id","handleDelete","text","showCancelButton","cancelButton","confirmButtonText","then","value","deleteRow","confirmButtonClass","indexToDelete","findIndex","tableRow","splice","goToCreateResidential","mounted","keys","threshold","created","$store","dispatch","watch","searchResult","search","map","item"],"sources":["src/pages/Residential/ResidentialTable.vue"],"sourcesContent":["<template>\n  <div class=\"content\">\n    <div class=\"col-md-8 ml-auto mr-auto\">\n      <h2 class=\"text-center\">Fraccionamientos</h2>\n    </div>\n    <div class=\"row mt-5\">\n      <div class=\"col-12\">\n        <card card-body-classes=\"table-full-width\">\n          <h4 slot=\"header\" class=\"card-title\">Elementos por Pagina</h4>\n          <div>\n            <div\n              class=\"col-12 d-flex justify-content-center justify-content-sm-between flex-wrap\"\n            >\n              <el-select\n                class=\"select-primary mb-3 pagination-select\"\n                v-model=\"pagination.perPage\"\n                placeholder=\"Per page\"\n              >\n                <el-option\n                  class=\"select-primary\"\n                  v-for=\"item in pagination.perPageOptions\"\n                  :key=\"item\"\n                  :label=\"item\"\n                  :value=\"item\"\n                >\n                </el-option>\n              </el-select>\n              <base-button @click=\"goToCreateResidential\" type=\"info\">\n                <i class=\"tim-icons icon-simple-add\"> </i> Crear Nuevo\n              </base-button>\n              <base-input>\n                <el-input\n                  type=\"search\"\n                  class=\"mb-3 search-input\"\n                  clearable\n                  prefix-icon=\"el-icon-search\"\n                  placeholder=\"Buscar registros\"\n                  v-model=\"searchQuery\"\n                  aria-controls=\"datatables\"\n                >\n                </el-input>\n              </base-input>\n            </div>\n            <el-table :data=\"queriedData\">\n              <el-table-column\n                v-for=\"column in tableColumns\"\n                :key=\"column.label\"\n                :min-width=\"column.minWidth\"\n                :prop=\"column.prop\"\n                :label=\"column.label\"\n              >\n              </el-table-column>\n              <el-table-column :min-width=\"135\" align=\"right\" label=\"Actions\">\n                <div slot-scope=\"props\">\n                  <base-button\n                    @click.native=\"handleLike(props.$index, props.row)\"\n                    class=\"like btn-link\"\n                    type=\"info\"\n                    size=\"sm\"\n                    icon\n                  >\n                    <i class=\"tim-icons icon-heart-2\"></i>\n                  </base-button>\n                  <base-button\n                    @click.native=\"handleEdit(props.$index, props.row)\"\n                    class=\"edit btn-link\"\n                    type=\"warning\"\n                    size=\"sm\"\n                    icon\n                  >\n                    <i class=\"tim-icons icon-pencil\"></i>\n                  </base-button>\n                  <base-button\n                    @click.native=\"handleDelete(props.$index, props.row)\"\n                    class=\"remove btn-link\"\n                    type=\"danger\"\n                    size=\"sm\"\n                    icon\n                  >\n                    <i class=\"tim-icons icon-simple-remove\"></i>\n                  </base-button>\n                </div>\n              </el-table-column>\n            </el-table>\n          </div>\n          <div\n            slot=\"footer\"\n            class=\"col-12 d-flex justify-content-center justify-content-sm-between flex-wrap\"\n          >\n            <div class=\"\">\n              <p class=\"card-category\">\n                Mostrando del {{ from + 1 }} al {{ to }} de\n                {{ total }} resultados\n              </p>\n            </div>\n            <base-pagination\n              class=\"pagination-no-border\"\n              v-model=\"pagination.currentPage\"\n              :per-page=\"pagination.perPage\"\n              :total=\"total\"\n            >\n            </base-pagination>\n          </div>\n        </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport { Table, TableColumn, Select, Option } from \"element-ui\";\nimport { BasePagination } from \"src/components\";\nimport Fuse from \"fuse.js\";\nimport swal from \"sweetalert2\";\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  components: {\n    BasePagination,\n    [Select.name]: Select,\n    [Option.name]: Option,\n    [Table.name]: Table,\n    [TableColumn.name]: TableColumn,\n  },\n  computed: {\n    ...mapGetters([\"getResidentials\"]),\n    tableData() {\n      return this.getResidentials;\n    },\n    queriedData() {\n      let result = this.tableData;\n      if (this.searchedData.length > 0) {\n        result = this.searchedData;\n      }\n      return result.slice(this.from, this.to);\n    },\n    to() {\n      let highBound = this.from + this.pagination.perPage;\n      if (this.total < highBound) {\n        highBound = this.total;\n      }\n      return highBound;\n    },\n    from() {\n      return this.pagination.perPage * (this.pagination.currentPage - 1);\n    },\n    total() {\n      return this.searchedData.length > 0\n        ? this.searchedData.length\n        : this.tableData.length;\n    },\n  },\n  data() {\n    return {\n      pagination: {\n        perPage: 5,\n        currentPage: 1,\n        perPageOptions: [5, 10, 25, 50],\n        total: 0,\n      },\n      searchQuery: \"\",\n      propsToSearch: [\"name\", \"address\", \"user_name\"],\n      tableColumns: [\n        {\n          prop: \"name\",\n          label: \"Nombre\",\n          minWidth: 200,\n        },\n        {\n          prop: \"address\",\n          label: \"Direccion\",\n          minWidth: 250,\n        },\n        {\n          prop: \"user_name\",\n          label: \"Responsable\",\n          minWidth: 120,\n        },\n        {\n          prop: \"lands\",\n          label: \"Lotes\",\n          minWidth: 100,\n        },\n        {\n          prop: \"cost\",\n          label: \"Costo/precio\",\n          minWidth: 120,\n        },\n        {\n          prop: \"total_expenses\",\n          label: \"Gastos\",\n          minWidth: 120,\n        },\n      ],\n      searchedData: [],\n      fuseSearch: null,\n    };\n  },\n  methods: {\n    ...mapActions([\"fetchResidentials\"]),\n    handleLike(index, row) {\n      swal.fire({\n        title: `Has marcado como favorito el ${row.name}`,\n        buttonsStyling: false,\n        icon: \"success\",\n        customClass: {\n          confirmButton: \"btn btn-success btn-fill\",\n        },\n      });\n    },\n    handleEdit(index, row) {\n      this.$router.push({ name: \"EditResidential\", params: { id: row.id } });\n    },\n    handleDelete(index, row) {\n      swal\n        .fire({\n          title: \"Estas seguro?\",\n          text: `No podras revertir estos cambios!`,\n          icon: \"warning\",\n          showCancelButton: true,\n          customClass: {\n            confirmButton: \"btn btn-success btn-fill\",\n            cancelButton: \"btn btn-danger btn-fill\",\n          },\n          confirmButtonText: \"Si, Borralo!\",\n          buttonsStyling: false,\n        })\n        .then((result) => {\n          if (result.value) {\n            this.deleteRow(row);\n            swal.fire({\n              title: \"Eliminado!\",\n              text: `You deleted ${row.name}`,\n              icon: \"success\",\n              confirmButtonClass: \"btn btn-success btn-fill\",\n              buttonsStyling: false,\n            });\n          }\n        });\n    },\n    deleteRow(row) {\n      let indexToDelete = this.tableData.findIndex(\n        (tableRow) => tableRow.id === row.id\n      );\n      if (indexToDelete >= 0) {\n        this.tableData.splice(indexToDelete, 1);\n      }\n    },\n    goToCreateResidential() {\n      this.$router.push({ name: \"CreateResidential\" });\n    },\n  },\n  mounted() {\n    this.fuseSearch = new Fuse(this.getResidentials, {\n      keys: [\"name\", \"address\", \"user_name\"],\n      threshold: 0.3,\n    });\n  },\n  created() {\n    this.$store.dispatch(\"fetchResidentials\");\n  },\n  watch: {\n    searchQuery(value) {\n      let result = this.tableData;\n      if (value !== \"\") {\n        const searchResult = this.fuseSearch.search(this.searchQuery);\n        result = searchResult.map((item) => item.item);\n      }\n      this.searchedData = result;\n    },\n  },\n};\n</script>\n<style>\n.pagination-select,\n.search-input {\n  width: 200px;\n}\n.swal2-icon-content {\n  font-size: inherit !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}