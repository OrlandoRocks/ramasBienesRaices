{"ast":null,"code":"import _defineProperty from \"/Users/it/webstorm_projects/VueProjects/ramasBienesRaices/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { CollapseTransition } from \"vue2-transitions\";\nexport default {\n  name: \"base-nav\",\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar menu is shown (valid for viewports < specified by `expand` prop)\"\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar is transparent\"\n    },\n    expand: {\n      type: String,\n      default: \"lg\",\n      description: \"Breakpoint where nav should expand\"\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: \"\",\n      description: \"Navbar menu (items) classes. Can be used to align menu items to the right/left\"\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: \"container-fluid\",\n      description: \"Container classes. Can be used to control container classes (contains both navbar brand and menu items)\"\n    },\n    type: {\n      type: String,\n      default: \"white\",\n      validator: function validator(value) {\n        return [\"dark\", \"success\", \"danger\", \"warning\", \"white\", \"primary\", \"info\", \"vue\"].includes(value);\n      },\n      description: \"Navbar color type\"\n    }\n  },\n  model: {\n    prop: \"show\",\n    event: \"change\"\n  },\n  components: {\n    CollapseTransition: CollapseTransition\n  },\n  data: function data() {\n    return {\n      transitionFinished: true\n    };\n  },\n  computed: {\n    classes: function classes() {\n      var color = \"bg-\".concat(this.type);\n      var classes = [{\n        \"navbar-transparent\": !this.show && this.transparent\n      }, _defineProperty({}, \"navbar-expand-\".concat(this.expand), this.expand)];\n      if (this.position) {\n        classes.push(\"navbar-\".concat(this.position));\n      }\n      if (!this.transparent || this.show && !this.transitionFinished || !this.show && !this.transitionFinished) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu: function hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu: function toggleMenu() {\n      this.$emit(\"change\", !this.show);\n    },\n    onTransitionStart: function onTransitionStart() {\n      this.transitionFinished = false;\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      this.transitionFinished = true;\n    }\n  }\n};","map":{"version":3,"names":["CollapseTransition","name","props","show","type","Boolean","default","description","transparent","expand","String","menuClasses","Object","Array","containerClasses","validator","value","includes","model","prop","event","components","data","transitionFinished","computed","classes","color","concat","_defineProperty","position","push","hasMenu","$slots","methods","toggleMenu","$emit","onTransitionStart","onTransitionEnd"],"sources":["src/components/Navbar/BaseNav.vue"],"sourcesContent":["<template>\n  <nav :class=\"classes\" class=\"navbar\">\n    <div :class=\"containerClasses\">\n      <slot name=\"brand\"></slot>\n\n      <slot name=\"toggle-button\">\n        <button\n          class=\"navbar-toggler collapsed\"\n          v-if=\"hasMenu\"\n          type=\"button\"\n          @click=\"toggleMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n        </button>\n      </slot>\n\n      <CollapseTransition\n        @after-leave=\"onTransitionEnd\"\n        @before-enter=\"onTransitionStart\"\n      >\n        <div\n          class=\"collapse navbar-collapse show\"\n          :class=\"menuClasses\"\n          v-show=\"show\"\n        >\n          <slot></slot>\n        </div>\n      </CollapseTransition>\n    </div>\n  </nav>\n</template>\n<script>\nimport { CollapseTransition } from \"vue2-transitions\";\n\nexport default {\n  name: \"base-nav\",\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description:\n        \"Whether navbar menu is shown (valid for viewports < specified by `expand` prop)\",\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: \"Whether navbar is transparent\",\n    },\n    expand: {\n      type: String,\n      default: \"lg\",\n      description: \"Breakpoint where nav should expand\",\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: \"\",\n      description:\n        \"Navbar menu (items) classes. Can be used to align menu items to the right/left\",\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: \"container-fluid\",\n      description:\n        \"Container classes. Can be used to control container classes (contains both navbar brand and menu items)\",\n    },\n    type: {\n      type: String,\n      default: \"white\",\n      validator(value) {\n        return [\n          \"dark\",\n          \"success\",\n          \"danger\",\n          \"warning\",\n          \"white\",\n          \"primary\",\n          \"info\",\n          \"vue\",\n        ].includes(value);\n      },\n      description: \"Navbar color type\",\n    },\n  },\n  model: {\n    prop: \"show\",\n    event: \"change\",\n  },\n  components: {\n    CollapseTransition,\n  },\n  data() {\n    return {\n      transitionFinished: true,\n    };\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [\n        { \"navbar-transparent\": !this.show && this.transparent },\n        { [`navbar-expand-${this.expand}`]: this.expand },\n      ];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (\n        !this.transparent ||\n        (this.show && !this.transitionFinished) ||\n        (!this.show && !this.transitionFinished)\n      ) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    },\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit(\"change\", !this.show);\n    },\n    onTransitionStart() {\n      this.transitionFinished = false;\n    },\n    onTransitionEnd() {\n      this.transitionFinished = true;\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":";;AAoCA,SAAAA,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;MACAC,WAAA,EACA;IACA;IACAC,WAAA;MACAJ,IAAA,EAAAC,OAAA;MACAC,OAAA;MACAC,WAAA;IACA;IACAE,MAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;MACAC,WAAA;IACA;IACAI,WAAA;MACAP,IAAA,GAAAM,MAAA,EAAAE,MAAA,EAAAC,KAAA;MACAP,OAAA;MACAC,WAAA,EACA;IACA;IACAO,gBAAA;MACAV,IAAA,GAAAM,MAAA,EAAAE,MAAA,EAAAC,KAAA;MACAP,OAAA;MACAC,WAAA,EACA;IACA;IACAH,IAAA;MACAA,IAAA,EAAAM,MAAA;MACAJ,OAAA;MACAS,SAAA,WAAAA,UAAAC,KAAA;QACA,QACA,QACA,WACA,UACA,WACA,SACA,WACA,QACA,MACA,CAAAC,QAAA,CAAAD,KAAA;MACA;MACAT,WAAA;IACA;EACA;EACAW,KAAA;IACAC,IAAA;IACAC,KAAA;EACA;EACAC,UAAA;IACArB,kBAAA,EAAAA;EACA;EACAsB,IAAA,WAAAA,KAAA;IACA;MACAC,kBAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,WAAAA,QAAA;MACA,IAAAC,KAAA,SAAAC,MAAA,MAAAvB,IAAA;MACA,IAAAqB,OAAA,IACA;QAAA,4BAAAtB,IAAA,SAAAK;MAAA,GAAAoB,eAAA,sBAAAD,MAAA,CACA,KAAAlB,MAAA,QAAAA,MAAA,EACA;MACA,SAAAoB,QAAA;QACAJ,OAAA,CAAAK,IAAA,WAAAH,MAAA,MAAAE,QAAA;MACA;MACA,IACA,MAAArB,WAAA,IACA,KAAAL,IAAA,UAAAoB,kBAAA,IACA,MAAApB,IAAA,UAAAoB,kBAAA,EACA;QACAE,OAAA,CAAAK,IAAA,CAAAJ,KAAA;MACA;MACA,OAAAD,OAAA;IACA;IACAM,OAAA,WAAAA,QAAA;MACA,YAAAC,MAAA,CAAA1B,OAAA;IACA;EACA;EACA2B,OAAA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAAC,KAAA,iBAAAhC,IAAA;IACA;IACAiC,iBAAA,WAAAA,kBAAA;MACA,KAAAb,kBAAA;IACA;IACAc,eAAA,WAAAA,gBAAA;MACA,KAAAd,kBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}