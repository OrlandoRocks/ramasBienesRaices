{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\n/*  We lazy load (async) the Calendar component because it contains 2 big libraries (jquery and fullcalendar)\n      If the component is not loaded within 100ms, we display a loading component in the meanwhile.\n      This way, we don't bloat the main bundle with 2 unnecessary libs that we only need for this page :)\n   */\nimport Loading from \"src/pages/Layout/LoadingMainPanel.vue\";\nvar Calendar = function Calendar() {\n  return {\n    component: import(\"./Calendar.vue\"),\n    loading: Loading,\n    delay: 100\n  };\n};\nexport default {\n  components: {\n    Calendar: Calendar\n  }\n};","map":{"version":3,"names":["Loading","Calendar","component","loading","delay","components"],"sources":["src/pages/Calendar/CalendarRoute.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"row d-flex justify-content-center\">\n      <div class=\"col-lg-10\">\n        <card class=\"card-calendar\"> <calendar></calendar> </card>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n/*  We lazy load (async) the Calendar component because it contains 2 big libraries (jquery and fullcalendar)\n      If the component is not loaded within 100ms, we display a loading component in the meanwhile.\n      This way, we don't bloat the main bundle with 2 unnecessary libs that we only need for this page :)\n   */\nimport Loading from \"src/pages/Layout/LoadingMainPanel.vue\";\n\nconst Calendar = () => ({\n  component: import(\"./Calendar.vue\"),\n  loading: Loading,\n  delay: 100,\n});\nexport default {\n  components: {\n    Calendar,\n  },\n};\n</script>\n<style>\n.card-calendar {\n  min-height: 400px;\n}\n</style>\n"],"mappings":";;;AAUA;AACA;AACA;AACA;AACA,OAAAA,OAAA;AAEA,IAAAC,QAAA,YAAAA,SAAA;EAAA;IACAC,SAAA;IACAC,OAAA,EAAAH,OAAA;IACAI,KAAA;EACA;AAAA;AACA;EACAC,UAAA;IACAJ,QAAA,EAAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}