{"ast":null,"code":"import { extend } from \"vee-validate\";\nimport { required, min, max, min_value, max_value } from \"vee-validate/dist/rules\";\nextend(\"required\", required);\nextend(\"min\", min);\nextend(\"max\", max);\nextend(\"min_value\", min_value);\nextend(\"max_value\", max_value);\nexport default {\n  data: function data() {\n    return {\n      minLength: \"\",\n      maxLength: \"\",\n      range: \"\",\n      minValue: \"\",\n      maxValue: \"\"\n    };\n  },\n  methods: {\n    submit: function submit() {\n      alert(\"Form has been submitted!\");\n    }\n  }\n};","map":{"version":3,"names":["extend","required","min","max","min_value","max_value","data","minLength","maxLength","range","minValue","maxValue","methods","submit","alert"],"sources":["src/pages/Forms/ValidationForms/RangeValidationForm.vue"],"sourcesContent":["<template>\n  <ValidationObserver v-slot=\"{ handleSubmit }\">\n    <form class=\"form-horizontal\" @submit.prevent=\"handleSubmit(submit)\">\n      <card>\n        <h4 slot=\"header\" class=\"card-title\">Range Validation</h4>\n        <div>\n          <div class=\"row\">\n            <label class=\"col-sm-2 col-form-label\">Min Length</label>\n            <div class=\"col-sm-7\">\n              <ValidationProvider\n                name=\"minLength\"\n                rules=\"required|min:5\"\n                v-slot=\"{ passed, failed, errors }\"\n              >\n                <base-input\n                  v-model=\"minLength\"\n                  :error=\"errors[0]\"\n                  :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n                >\n                </base-input>\n              </ValidationProvider>\n            </div>\n            <label class=\"col-sm-3 label-on-right\"><code>min=\"5\"</code></label>\n          </div>\n\n          <div class=\"row\">\n            <label class=\"col-sm-2 col-form-label\">Max Length</label>\n            <div class=\"col-sm-7\">\n              <ValidationProvider\n                name=\"maxLength\"\n                rules=\"required|max:5\"\n                v-slot=\"{ passed, failed, errors }\"\n              >\n                <base-input\n                  v-model=\"maxLength\"\n                  :error=\"errors[0]\"\n                  :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n                >\n                </base-input>\n              </ValidationProvider>\n            </div>\n            <label class=\"col-sm-3 label-on-right\"><code>max=\"5\"</code></label>\n          </div>\n\n          <div class=\"row\">\n            <label class=\"col-sm-2 col-form-label\">Range</label>\n            <div class=\"col-sm-7\">\n              <ValidationProvider\n                name=\"range\"\n                rules=\"required|min:6|max:10\"\n                v-slot=\"{ passed, failed, errors }\"\n              >\n                <base-input\n                  v-model=\"range\"\n                  :error=\"errors[0]\"\n                  :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n                >\n                </base-input>\n              </ValidationProvider>\n            </div>\n            <label class=\"col-sm-3 label-on-right\"\n              ><code>min_value=\"6\", max_value=\"10\"</code></label\n            >\n          </div>\n\n          <div class=\"row\">\n            <label class=\"col-sm-2 col-form-label\">Min Value</label>\n            <div class=\"col-sm-7\">\n              <ValidationProvider\n                name=\"minValue\"\n                rules=\"required|min_value:6\"\n                v-slot=\"{ passed, failed, errors }\"\n              >\n                <base-input\n                  v-model=\"minValue\"\n                  :error=\"errors[0]\"\n                  :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n                >\n                </base-input>\n              </ValidationProvider>\n            </div>\n            <label class=\"col-sm-3 label-on-right\"\n              ><code>min_value=\"6\"</code></label\n            >\n          </div>\n\n          <div class=\"row\">\n            <label class=\"col-sm-2 col-form-label\">Max Value</label>\n            <div class=\"col-sm-7\">\n              <ValidationProvider\n                name=\"maxValue\"\n                rules=\"required|max_value:10\"\n                v-slot=\"{ passed, failed, errors }\"\n              >\n                <base-input\n                  v-model=\"maxValue\"\n                  :error=\"errors[0]\"\n                  :class=\"[{ 'has-success': passed }, { 'has-danger': failed }]\"\n                >\n                </base-input>\n              </ValidationProvider>\n            </div>\n            <label class=\"col-sm-3 label-on-right\"\n              ><code>max_value=\"6\"</code></label\n            >\n          </div>\n        </div>\n        <div class=\"text-center\">\n          <base-button native-type=\"submit\" type=\"primary\"\n            >Validate inputs</base-button\n          >\n        </div>\n      </card>\n    </form>\n  </ValidationObserver>\n</template>\n<script>\nimport { extend } from \"vee-validate\";\nimport {\n  required,\n  min,\n  max,\n  min_value,\n  max_value,\n} from \"vee-validate/dist/rules\";\n\nextend(\"required\", required);\nextend(\"min\", min);\nextend(\"max\", max);\nextend(\"min_value\", min_value);\nextend(\"max_value\", max_value);\n\nexport default {\n  data() {\n    return {\n      minLength: \"\",\n      maxLength: \"\",\n      range: \"\",\n      minValue: \"\",\n      maxValue: \"\",\n    };\n  },\n  methods: {\n    submit() {\n      alert(\"Form has been submitted!\");\n    },\n  },\n};\n</script>\n<style></style>\n"],"mappings":"AAqHA,SAAAA,MAAA;AACA,SACAC,QAAA,EACAC,GAAA,EACAC,GAAA,EACAC,SAAA,EACAC,SAAA,QACA;AAEAL,MAAA,aAAAC,QAAA;AACAD,MAAA,QAAAE,GAAA;AACAF,MAAA,QAAAG,GAAA;AACAH,MAAA,cAAAI,SAAA;AACAJ,MAAA,cAAAK,SAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;MACAC,KAAA;MACAC,QAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA,WAAAA,OAAA;MACAC,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}