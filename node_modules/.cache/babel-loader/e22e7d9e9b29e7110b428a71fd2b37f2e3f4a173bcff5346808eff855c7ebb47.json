{"ast":null,"code":"import { BaseNav, Modal } from \"@/components\";\nimport SidebarToggleButton from \"./SidebarToggleButton\";\nimport \"@/store/index.js\";\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  components: {\n    SidebarToggleButton,\n    BaseNav,\n    Modal\n  },\n  computed: {\n    ...mapGetters([\"getAuthToken\", \"getUserEmail\", \"getUserName\"]),\n    routeName() {\n      const {\n        name\n      } = this.$route;\n      return this.capitalizeFirstLetter(name);\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    }\n  },\n  data() {\n    return {\n      activeNotifications: false,\n      showMenu: false,\n      searchModalVisible: false,\n      searchQuery: \"\"\n    };\n  },\n  methods: {\n    ...mapActions([\"logoutUser\"]),\n    onLogout(event) {\n      event.preventDefault();\n      this.logoutUser();\n    },\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown() {\n      this.activeNotifications = false;\n    },\n    toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    hideSidebar() {\n      this.$sidebar.displaySidebar(false);\n    },\n    toggleMenu() {\n      this.showMenu = !this.showMenu;\n    }\n  }\n};","map":{"version":3,"names":["BaseNav","Modal","SidebarToggleButton","mapActions","mapGetters","components","computed","routeName","name","$route","capitalizeFirstLetter","isRTL","$rtl","data","activeNotifications","showMenu","searchModalVisible","searchQuery","methods","onLogout","event","preventDefault","logoutUser","string","charAt","toUpperCase","slice","toggleNotificationDropDown","closeDropDown","toggleSidebar","$sidebar","displaySidebar","showSidebar","hideSidebar","toggleMenu"],"sources":["src/pages/Layout/DashboardNavbar.vue"],"sourcesContent":["<template>\n  <base-nav\n    v-model=\"showMenu\"\n    class=\"navbar-absolute top-navbar\"\n    type=\"white\"\n    :transparent=\"true\"\n  >\n    <div slot=\"brand\" class=\"navbar-wrapper\">\n      <div class=\"navbar-minimize d-inline\"><sidebar-toggle-button /></div>\n      <div\n        class=\"navbar-toggle d-inline\"\n        :class=\"{ toggled: $sidebar.showSidebar }\"\n      >\n        <button type=\"button\" class=\"navbar-toggler\" @click=\"toggleSidebar\">\n          <span class=\"navbar-toggler-bar bar1\"></span>\n          <span class=\"navbar-toggler-bar bar2\"></span>\n          <span class=\"navbar-toggler-bar bar3\"></span>\n        </button>\n      </div>\n      <a class=\"navbar-brand\" href=\"#pablo\"\n        >{{ routeName }} Bienvenido {{ getUserName }}</a\n      >\n    </div>\n\n    <ul class=\"navbar-nav\" :class=\"$rtl.isRTL ? 'mr-auto' : 'ml-auto'\">\n      <div class=\"search-bar input-group\" @click=\"searchModalVisible = true\">\n        <!--\n          <input type=\"text\" class=\"form-control\" placeholder=\"Search...\">\n          <div class=\"input-group-addon\"><i class=\"tim-icons icon-zoom-split\"></i></div>\n        -->\n        <button\n          class=\"btn btn-link\"\n          id=\"search-button\"\n          data-toggle=\"modal\"\n          data-target=\"#searchModal\"\n        >\n          <i class=\"tim-icons icon-zoom-split\"></i>\n        </button>\n        <!-- You can choose types of search input -->\n      </div>\n      <modal\n        :show.sync=\"searchModalVisible\"\n        class=\"modal-search\"\n        id=\"searchModal\"\n        :centered=\"false\"\n        :show-close=\"true\"\n      >\n        <input\n          slot=\"header\"\n          v-model=\"searchQuery\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"inlineFormInputGroup\"\n          placeholder=\"SEARCH\"\n        />\n      </modal>\n      <base-dropdown\n        tag=\"li\"\n        :menu-on-right=\"!$rtl.isRTL\"\n        title-tag=\"a\"\n        title-classes=\"nav-link\"\n        class=\"nav-item\"\n      >\n        <template slot=\"title\">\n          <div\n            v-if=\"false\"\n            class=\"notification d-none d-lg-block d-xl-block\"\n          ></div>\n          <i class=\"tim-icons icon-sound-wave\"></i>\n          <p class=\"d-lg-none\">Nueva Notificacion</p>\n        </template>\n        <li class=\"nav-link\">\n          <a href=\"#\" class=\"nav-item dropdown-item\">Notificacion 1</a>\n        </li>\n        <li class=\"nav-link\">\n          <a href=\"#\" class=\"nav-item dropdown-item\">Notificacion 2</a>\n        </li>\n        <li class=\"nav-link\">\n          <a href=\"#\" class=\"nav-item dropdown-item\">Notificacion 3</a>\n        </li>\n      </base-dropdown>\n      <base-dropdown\n        tag=\"li\"\n        :menu-on-right=\"!$rtl.isRTL\"\n        title-tag=\"a\"\n        class=\"nav-item\"\n        title-classes=\"nav-link\"\n        menu-classes=\"dropdown-navbar\"\n      >\n        <template slot=\"title\">\n          <div class=\"photo\"><img src=\"img/mike.jpg\" /></div>\n          <b class=\"caret d-none d-lg-block d-xl-block\"></b>\n          <p class=\"d-lg-none\">Log out</p>\n        </template>\n        <li class=\"nav-link\">\n          <a href=\"#\" class=\"nav-item dropdown-item\">Profile</a>\n        </li>\n        <li class=\"nav-link\">\n          <a href=\"#\" class=\"nav-item dropdown-item\">Settings</a>\n        </li>\n        <div class=\"dropdown-divider\"></div>\n        <li class=\"nav-link\">\n          <a href=\"#\" @click=\"onLogout\" class=\"nav-item dropdown-item\"\n            >Log out</a\n          >\n        </li>\n      </base-dropdown>\n    </ul>\n  </base-nav>\n</template>\n<script>\nimport { BaseNav, Modal } from \"@/components\";\nimport SidebarToggleButton from \"./SidebarToggleButton\";\nimport \"@/store/index.js\";\nimport { mapActions, mapGetters } from \"vuex\";\n\nexport default {\n  components: {\n    SidebarToggleButton,\n    BaseNav,\n    Modal,\n  },\n  computed: {\n    ...mapGetters([\"getAuthToken\", \"getUserEmail\", \"getUserName\"]),\n    routeName() {\n      const { name } = this.$route;\n      return this.capitalizeFirstLetter(name);\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n  },\n  data() {\n    return {\n      activeNotifications: false,\n      showMenu: false,\n      searchModalVisible: false,\n      searchQuery: \"\",\n    };\n  },\n  methods: {\n    ...mapActions([\"logoutUser\"]),\n    onLogout(event) {\n      event.preventDefault();\n      this.logoutUser();\n    },\n    capitalizeFirstLetter(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    },\n    toggleNotificationDropDown() {\n      this.activeNotifications = !this.activeNotifications;\n    },\n    closeDropDown() {\n      this.activeNotifications = false;\n    },\n    toggleSidebar() {\n      this.$sidebar.displaySidebar(!this.$sidebar.showSidebar);\n    },\n    hideSidebar() {\n      this.$sidebar.displaySidebar(false);\n    },\n    toggleMenu() {\n      this.showMenu = !this.showMenu;\n    },\n  },\n};\n</script>\n<style scoped>\n.top-navbar {\n  top: 0px;\n}\n</style>\n"],"mappings":"AA+GA,SAAAA,OAAA,EAAAC,KAAA;AACA,OAAAC,mBAAA;AACA;AACA,SAAAC,UAAA,EAAAC,UAAA;AAEA;EACAC,UAAA;IACAH,mBAAA;IACAF,OAAA;IACAC;EACA;EACAK,QAAA;IACA,GAAAF,UAAA;IACAG,UAAA;MACA;QAAAC;MAAA,SAAAC,MAAA;MACA,YAAAC,qBAAA,CAAAF,IAAA;IACA;IACAG,MAAA;MACA,YAAAC,IAAA,CAAAD,KAAA;IACA;EACA;EACAE,KAAA;IACA;MACAC,mBAAA;MACAC,QAAA;MACAC,kBAAA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAf,UAAA;IACAgB,SAAAC,KAAA;MACAA,KAAA,CAAAC,cAAA;MACA,KAAAC,UAAA;IACA;IACAZ,sBAAAa,MAAA;MACA,OAAAA,MAAA,CAAAC,MAAA,IAAAC,WAAA,KAAAF,MAAA,CAAAG,KAAA;IACA;IACAC,2BAAA;MACA,KAAAb,mBAAA,SAAAA,mBAAA;IACA;IACAc,cAAA;MACA,KAAAd,mBAAA;IACA;IACAe,cAAA;MACA,KAAAC,QAAA,CAAAC,cAAA,OAAAD,QAAA,CAAAE,WAAA;IACA;IACAC,YAAA;MACA,KAAAH,QAAA,CAAAC,cAAA;IACA;IACAG,WAAA;MACA,KAAAnB,QAAA,SAAAA,QAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}